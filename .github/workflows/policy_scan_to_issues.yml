name: Veracode Policy Scan to Issues
on: workflow_dispatch
permissions:
  contents: read
  actions: read
  issues: write

jobs:
 static_analysis:
   name: Static Analysis
   runs-on: ubuntu-latest
   env:
       VERACODE_API_KEY_ID: ${{ secrets.VERACODE_API_ID }}
       VERACODE_API_KEY_SECRET: ${{ secrets.VERACODE_API_KEY }}
   steps:
     - name: Check out main branch
       uses: actions/checkout@v2

     - name: Download CLI
       uses: wei/curl@master
       with:
         args: -fsS https://tools.veracode.com/veracode-cli/install | sh

     - name: Package Application
       run: ./veracode package -s . -o veracode-artifact -a trust

     # - name: Build with Maven
     #   run: mvn -B package --file pom.xml

     - name: Veracode Upload And Scan
       uses: veracode/veracode-uploadandscan-action@0.2.6
       with:
         appname: 'nodegoat'
         createprofile: false
         filepath: 'veracode-artifact'
         vid: '${{ secrets.VERACODE_API_ID }}'
         vkey: '${{ secrets.VERACODE_API_KEY }}'
         createsandbox: 'false'
         scantimeout: 60
         scanpollinginterval: 120

# this first step will get existing flaws for an Application Profile (in this case, NodeGoat).  
# 	(obviously) Change the name=<app_name> in the first http call to be 
#	the name of your Application on the Veracode platform
 import-policy-flaws:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Checkout repo (required for actions to access repo metadata)
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y httpie jq
          pip install veracode-api-signing

      - name: Download Veracode policy flaws
        run: |
          mkdir -p /tmp/veracode
          cd /tmp/veracode
          export VERACODE_API_KEY_ID=${{ secrets.VERACODE_API_ID }}
          export VERACODE_API_KEY_SECRET=${{ secrets.VERACODE_API_KEY }}

          guid=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v1/applications?name=NodeGoat" | jq -r '._embedded.applications[0].guid')
          echo "GUID: ${guid}"

          total_flaws=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True" | jq -r '.page.total_elements')
          echo "TOTAL FLAWS: ${total_flaws}"

          http --auth-type veracode_hmac GET \
            "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True&size=${total_flaws}" \
            > policy_flaws.json

      - name: Import flaws as GitHub issues
        uses: veracode/veracode-flaws-to-issues@main
        with:
          scan-results-json: /tmp/veracode/policy_flaws.json
  
