# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, and scan

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
    enableCustomProcessTemplate: true
    customWorkItemType: Flaw
    customPTActiveStatus: Working
    customPTNewStatus: Introducing
    customPTResolvedStatus: Resolved
    customPTCloseStatus: Closed

steps:
- task: Bash@3
  displayName: Auto-Packaing With Veracode CLI
  enabled: true
  inputs:
    targetType: "inline"
    script: |
      pwd
      export VERACODE_API_KEY_ID=$(VERACODE_API_ID)
      export VERACODE_API_KEY_SECRET=$(VERACODE_API_KEY)
      curl -fsS https://tools.veracode.com/veracode-cli/install | sh
      ./veracode package -s '$(Build.SourcesDirectory)' -o '$(build.artifactstagingdirectory)' -a trust

- task: Bash@3
  displayName: Container Scanning
  enabled: false
  inputs:
    targetType: "inline"
    script: |
      export VERACODE_API_KEY_ID=$(VERACODE_API_ID)
      export VERACODE_API_KEY_SECRET=$(VERACODE_API_KEY)
      ./veracode scan --source alpine:latest --type image || true

- task: Veracode@3
  displayName: Upload & Scan
  enabled: true
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode-Demo'
    veracodeAppProfile: 'nodegoat'
    version: 'nodegoat-$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    # sandboxName: 'Azure DevOps'
    createSandBox: false
    importResults: true
    maximumWaitTime: '360'

- task: Veracode@3
  displayName: Create App Profile and Upload & Scan
  enabled: false
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode-Demo'
    veracodeAppProfile: 'nodegoat-customfields'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    optargs: '-customfield name="Language" value="NodeJS"'
    createProfile: true
    maximumWaitTime: '360'

- task: VeracodePipelineScan@0
  displayName: Pipeline Scan
  enabled: false
  inputs:
    VeracodeAPIID: '$(VERACODE_API_ID)'
    VeracodeAPIsecret: '$(VERACODE_API_KEY)'
    fileToScan: '$(build.artifactstagingdirectory)/veracode-auto-pack-s-js.zip'
    breakPipeline: false
    additionalFlags: '--fail_on_severity="Very High, High"'

- task: CmdLine@2
  displayName: SCA Agent-Based Scan
  enabled: true
  inputs:
    script: |
      export SCM_URI='https://nodegoat-ADO'
      export SRCCLR_API_TOKEN=$(SRCCLR_API_TOKEN)
      export scaDownloadUrl=https://download.srcclr.com/ci.sh
      export SCM_REF_TYPE=branch
      # make sure the branch name is set appropriately for the below scm_ref 
      export SCM_REF=master
      export SCM_REV=1.0
      curl -sSL $scaDownloadUrl | env bash -s scan --scm-uri $SCM_URI --scm-rev $SCM_REV --scm-ref $SCM_REF --scm-ref-type $SCM_REF_TYPE --update-advisor --allow-dirty

- task: VeracodePipelineScan@0
  displayName: Pipeline Scan
  enabled: true
  inputs:
    VeracodeAPIID: '$(VERACODE_API_ID)'
    VeracodeAPIsecret: '$(VERACODE_API_KEY)'
    fileToScan: '$(build.artifactstagingdirectory)/veracode-auto-pack-s-js.zip'

- task: Veracode Flaw Importer@3
  enabled: false
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode-Demo'
    veracodeAppProfile: 'nodegoat'
    sandboxName: 'Azure DevOps'
    scanType: 'Static, SCA'
    importType: 'All Unmitigated Flaws Violating Policy'
    workItemType: 'Issue'
    area: '$(system.teamProject)'
    overwriteAreaPathInWorkItemsOnImport: true
    iterationPath: '$(system.teamProject)'
    overwriteIterationPath: true
    addCustomTag: 'external, internet facing'
    flawImportLimit: '1000'

